#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если Проведен И Статус = ПредопределенноеЗначение("Перечисление.ВКМ_СтатусыЗаявокНаОбслуживание.Открыт") Тогда
			
			Записать(РежимЗаписиДокумента.ОтменаПроведения);		

	ИначеЕсли Статус = ПредопределенноеЗначение("Перечисление.ВКМ_СтатусыЗаявокНаОбслуживание.Выполнен") Тогда

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_НачалоДействияДоговора КАК НачалоДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ОкончаниеДействияДоговора КАК ОкончаниеДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	ДоговорыКонтрагентов.ВКМ_АбонентскаяПлата КАК АбонентскаяПлата,
		|	ВКМ_ОбслуживаниеКлиентов.Клиент КАК Клиент,
		|	ВКМ_ОбслуживаниеКлиентов.Договор КАК Договор,
		|	ДоговорыКонтрагентов.Наименование КАК НаименованиеДоговора,
		|	ВКМ_ОбслуживаниеКлиентов.Дата КАК ДатаДокумента,
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	СУММА(ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.ФактическиПотраченоЧасов) КАК ФактическиПотраченоЧасов,
		|	СУММА(ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|			ПО ВКМ_ОбслуживаниеКлиентов.Договор = ДоговорыКонтрагентов.Ссылка
		|		ПО ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиентов.Ссылка
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка
		|	И ДоговорыКонтрагентов.Владелец = ВКМ_ОбслуживаниеКлиентов.Клиент
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.ВидДоговора,
		|	ДоговорыКонтрагентов.ВКМ_НачалоДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ОкончаниеДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы,
		|	ДоговорыКонтрагентов.ВКМ_АбонентскаяПлата,
		|	ВКМ_ОбслуживаниеКлиентов.Клиент,
		|	ВКМ_ОбслуживаниеКлиентов.Договор,
		|	ДоговорыКонтрагентов.Наименование,
		|	ВКМ_ОбслуживаниеКлиентов.Дата";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка );
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выгрузить();
	
	Для Каждого ДоговорЗапрос Из Выборка Цикл
		
Если ДоговорЗапрос.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание") Тогда
	
	ВидНеобходимогоДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание");	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = СтрШаблон("Договор ""%1"" не является необходимым видом договора. 
	|Выберите договор с видом ""%2"" и повторите проведение.", ДоговорЗапрос.НаименованиеДоговора, ВидНеобходимогоДоговора);
	Сообщение.Сообщить();
	Отказ = Истина;
	
КонецЕсли;

Если ДоговорЗапрос.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание") Тогда

Если ДоговорЗапрос.ДатаДокумента >= ДоговорЗапрос.НачалоДействияДоговора И ДоговорЗапрос.ДатаДокумента <= ДоговорЗапрос.ОкончаниеДействияДоговора Тогда	

	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботыРег.Записывать = Истина;
	
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботыРег.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Клиент = Клиент;
	Движение.Договор = Договор;
	Движение.КоличествоЧасов = ДоговорЗапрос.ЧасыКОплатеКлиенту;
	Движение.СуммаКОплате = ДоговорЗапрос.СтоимостьЧасаРаботы * Движение.КоличествоЧасов;
	
	
Иначе
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = СтрШаблон("Дата документа ""%1"" не входит в период действия договора С ""%2"" По ""%3"". 
	|Выберите договор с подходящей датой действия и повторите проведение.",ДоговорЗапрос.ДатаДокумента, ДоговорЗапрос.НачалоДействияДоговора, ДоговорЗапрос.ОкончаниеДействияДоговора);

	Сообщение.Сообщить();
	Отказ = Истина;
	
КонецЕсли;

КонецЕсли;
	
КонецЦикла;	


	// запись в регистр ВКМ_ВыполненныеСотрудникомРаботыРег
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковРег.ПроцентОтРабот КАК ПроцентОтРабот,
		|	ВКМ_УсловияОплатыСотрудниковРег.Сотрудник.КатегорияСотрудника КАК КатегорияСотрудника
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудниковРег КАК ВКМ_УсловияОплатыСотрудниковРег
		|ГДЕ
		|	ВКМ_УсловияОплатыСотрудниковРег.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
	
	Для Каждого Сотрудник Из ВыборкаДетальныеЗаписи Цикл
	
	Если Сотрудник.ПроцентОтРабот = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон("Для сотрудника %1 не установлен процент оплаты от работ", Специалист);
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
//	ИначеЕсли Сотрудник.ПроцентОтРабот <> 0 Тогда
	Иначе
			
	ПроцентОтРабот = Сотрудник.ПроцентОтРабот;
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботыРег.Записывать = Истина;
	
	ДвижениеПоСотрудникам = Движения.ВКМ_ВыполненныеСотрудникомРаботыРег.Добавить();
	ДвижениеПоСотрудникам.Период = Дата;
	ДвижениеПоСотрудникам.ВидДвижения = ВидДвиженияНакопления.Приход;
	ДвижениеПоСотрудникам.Сотрудник = Специалист;
	ДвижениеПоСотрудникам.ЧасовКОплате = (ВремяОкончанияРабот - ВремяНачалаРабот) / 3600;
	
		Если Сотрудник.КатегорияСотрудника = ПредопределенноеЗначение("Перечисление.ВКМ_КлассификацияСотрудников.Специалист") И Сотрудник.ПроцентОтРабот <> 0 Тогда
	
		ДвижениеПоСотрудникам.СуммаКОплате = (Договор.ВКМ_СтоимостьЧасаРаботы * ДвижениеПоСотрудникам.ЧасовКОплате * ПроцентОтРабот) / 100;
	
		ИначеЕсли Не Сотрудник.КатегорияСотрудника = ПредопределенноеЗначение("Перечисление.ВКМ_КлассификацияСотрудников.Специалист") ИЛИ Сотрудник.ПроцентОтРабот = 0 Тогда
	
		ДвижениеПоСотрудникам.СуммаКОплате = 0;
		
		КонецЕсли;
		
	КонецЕсли;
	
	КонецЦикла;
	
	Статус = ПредопределенноеЗначение("Перечисление.ВКМ_СтатусыЗаявокНаОбслуживание.Закрыт");
	Записать(РежимЗаписиДокумента.Запись);
	
	Иначе
		
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Проведение документа возможно только при статусе докумена ""Выполнен""";
		Сообщение.Сообщить();
	
	КонецЕсли;
	
	

КонецПроцедуры

#КонецОбласти
