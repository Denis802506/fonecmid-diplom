Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();
	
	РассчитатьОклад();
	РассчитатьОтпускные();
	РассчитатьДополнительныеНачисления();
	РассчитатьУдержания();
	СформироватьДвиженияВзаиморасчетыССотрудниками();
	
КонецПроцедуры

Процедура СформироватьДвижения();
	
	СформироватьДвиженияОсновныеНачисления();
	СформироватьДвиженияУдержания();
	
КонецПроцедуры

Процедура СформироватьДвиженияОсновныеНачисления();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаОкончания КАК ДатаОкончания,
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
	|	НАЧАЛОПЕРИОДА(ВКМ_НачисленияЗарплатыОсновныеНачисления.ДатаНачала, МЕСЯЦ) КАК ПериодДействия
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
	|	ВКМ_УсловияОплатыСотрудниковРегСрезПоследних.Оклад КАК РазмерНачисления
	|ПОМЕСТИТЬ ВТ_РазмерыОкладов
	|ИЗ
	|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудниковРег.СрезПоследних(&Дата, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник
	|			ИЗ
	|				Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
	|			ГДЕ
	|				ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковРегСрезПоследних
	|		ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_УсловияОплатыСотрудниковРегСрезПоследних.Сотрудник
	|		И ВТ_ДанныеДокумента.ВидРасчета = &Оклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
	|	ВТ_ДанныеДокумента.ДатаНачала КАК ПериодДействияНачало,
	|	ВТ_ДанныеДокумента.ДатаОкончания КАК ПериодДействияКонец,
	|	ВТ_ДанныеДокумента.ГрафикРаботы КАК ГрафикРаботы,
	|	ВТ_РазмерыОкладов.РазмерНачисления КАК Показатель,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВТ_ДанныеДокумента.ДатаНачала, Месяц), МЕСЯЦ, -12) КАК БазовыйПериодНачало,
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВТ_ДанныеДокумента.ДатаНачала, МЕСЯЦ), СЕКУНДА, -1) КАК БазовыйПериодКонец
	|ИЗ
	|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерыОкладов КАК ВТ_РазмерыОкладов
	|		ПО ВТ_ДанныеДокумента.Сотрудник = ВТ_РазмерыОкладов.Сотрудник
	|		И ВТ_ДанныеДокумента.ВидРасчета = ВТ_РазмерыОкладов.ВидРасчета";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисленияРег.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Движение.ПериодРегистрации = НачалоМесяца(Дата);
		
		Если ВыборкаДетальныеЗаписи.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные Тогда
			
			Движение.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.БазовыйПериодНачало;
			Движение.БазовыйПериодКонец = ВыборкаДетальныеЗаписи.БазовыйПериодКонец;
			
		Иначе
			
			Движение.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.ПериодДействияНачало;
			Движение.БазовыйПериодКонец = ВыборкаДетальныеЗаписи.ПериодДействияКонец;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисленияРег.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияУдержания();
	
	ПоказательНДФЛ = Константы.ВКМ_РазмерНДФЛ.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_ОсновныеНачисленияРег.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияРег.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисленияРег КАК ВКМ_ОсновныеНачисленияРег
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияРег.Регистратор = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДвижениеУдержание = Движения.ВКМ_УдержанияРег.Добавить();
		ЗаполнитьЗначенияСвойств(ДвижениеУдержание, ВыборкаДетальныеЗаписи);
		ДвижениеУдержание.Показатель = ПоказательНДФЛ;
		ДвижениеУдержание.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.УдержаниеНДФЛ;
		
	КонецЦикла;
	
	Движения.ВКМ_УдержанияРег.Записать();
	
КонецПроцедуры

Процедура РассчитатьОклад();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияРегДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияРегДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияРегДанныеГрафика.ЗначениеПериодДействия, 0) КАК РабДнейВМесяце
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисленияРег.ДанныеГрафика(Регистратор = &Ссылка
	|	И ВидРасчета = &ВидРасчетаОклад) КАК ВКМ_ОсновныеНачисленияРегДанныеГрафика";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисленияРег[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Начисление = (Движение.Показатель / ВыборкаДетальныеЗаписи.РабДнейВМесяце) * ВыборкаДетальныеЗаписи.Факт;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисленияРег.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпускные();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияРегДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияРегДанныеГрафика.ЗначениеБазовыйПериод / 8 КАК КоличествоРабочихДней,
	|	ВКМ_ОсновныеНачисленияРегДанныеГрафика.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисленияРегДанныеГрафика.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ДЕНЬ(ВКМ_ОсновныеНачисленияРегДанныеГрафика.ПериодДействияКонец) -
	|		ДЕНЬ(ВКМ_ОсновныеНачисленияРегДанныеГрафика.ПериодДействияНачало) + 1 КАК КоличествоОтпускных,
	|	ВКМ_ОсновныеНачисленияРегДанныеГрафика.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ПериодыДействвия
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисленияРег.ДанныеГрафика(Сотрудник В
	|		(ВЫБРАТЬ
	|			ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник
	|		ИЗ
	|			Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
	|		ГДЕ
	|			ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|			И ВКМ_НачисленияЗарплатыОсновныеНачисления.ВидРасчета = &ВидРасчетаОтпускные)) КАК
	|		ВКМ_ОсновныеНачисленияРегДанныеГрафика
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияРегДанныеГрафика.Регистратор.Ссылка = &Ссылка
	|	И ВКМ_ОсновныеНачисленияРегДанныеГрафика.ВидРасчета = &ВидРасчетаОтпускные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВКМ_ОсновныеНачисленияРег.Начисление), 0) КАК Начисление,
	|	ВКМ_ОсновныеНачисленияРег.Сотрудник КАК Сотрудник,
	|	ВТ_ПериодыДействвия.КоличествоРабочихДней КАК КоличествоРабочихДней,
	|	ВТ_ПериодыДействвия.КоличествоОтпускных КАК КоличествоОтпускных,
	|	ВТ_ПериодыДействвия.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_ПериодыДействвия КАК ВТ_ПериодыДействвия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисленияРег КАК ВКМ_ОсновныеНачисленияРег
	|		ПО ВТ_ПериодыДействвия.Сотрудник = ВКМ_ОсновныеНачисленияРег.Сотрудник
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияРег.ПериодДействия
	|		МЕЖДУ ВТ_ПериодыДействвия.БазовыйПериодНачало И ВТ_ПериодыДействвия.БазовыйПериодКонец
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисленияРег.Сотрудник,
	|	ВТ_ПериодыДействвия.КоличествоРабочихДней,
	|	ВТ_ПериодыДействвия.КоличествоОтпускных,
	|	ВТ_ПериодыДействвия.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОтпускные", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисленияРег[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Показатель = ВыборкаДетальныеЗаписи.Начисление;
		Отпускные = (Движение.Показатель / ВыборкаДетальныеЗаписи.КоличествоРабочихДней) * ВыборкаДетальныеЗаписи.КоличествоОтпускных;
		Движение.Начисление = Отпускные;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисленияРег.Записать(,ИСТИНА , , );
	
КонецПроцедуры

Процедура РассчитатьДополнительныеНачисления();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_ВыполненныеСотрудникомРаботыРегОбороты.Сотрудник КАК Сотрудник,
	|	ВКМ_ВыполненныеСотрудникомРаботыРегОбороты.ЧасовКОплатеПриход КАК ЧасовКОплате,
	|	ВКМ_ВыполненныеСотрудникомРаботыРегОбороты.СуммаКОплатеПриход КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботыРег.Обороты(&НачалоПериода, &КонецПериода,, Сотрудник В
	|		(ВЫБРАТЬ
	|			ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник
	|		ИЗ
	|			Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
	|		ГДЕ
	|			ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_ВыполненныеСотрудникомРаботыРегОбороты";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ДополнительныеНачисленияРег.Добавить();
		Движение.Регистратор = Ссылка;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ДоплатаЗаЗаказы;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ЧасовКОплате = ВыборкаДетальныеЗаписи.ЧасовКОплате;
		Движение.СуммаКОплате = ВыборкаДетальныеЗаписи.СуммаКОплате;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисленияРег.Записать();
	
КонецПроцедуры

Процедура РассчитатьУдержания();
	
	// Заполняем регистр данными ДопНачислений и расчитываем значение удержания
	
	ПоказательНДФЛ = Константы.ВКМ_РазмерНДФЛ.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисленияРег.Сотрудник КАК Сотрудник,
	|	СУММА(ВКМ_ДополнительныеНачисленияРег.СуммаКОплате) КАК СуммаКОплате
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисленияРег КАК ВКМ_ДополнительныеНачисленияРег
	|ГДЕ
	|	ВКМ_ДополнительныеНачисленияРег.ПериодРегистрации = &Период
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисленияРег.Сотрудник";
	
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписейДоп = РегистрыРасчета.ВКМ_УдержанияРег.СоздатьНаборЗаписей();
		НаборЗаписейДоп.Отбор.Регистратор.Установить(Ссылка);
		НаборЗаписейДоп.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
		НаборЗаписейДоп.Прочитать();
		
		Для Каждого ЗаписьДоп из НаборЗаписейДоп Цикл
			
			ЗаписьДоп.Начисление = (Выборка.СуммаКОплате * ПоказательНДФЛ) / 100;
			
		КонецЦикла;	
		
		НаборЗаписейДоп.Записать(,Истина , , );
		
	КонецЦикла;
	
	
	
	// Заполняем регистр данными Основных начислений и расчитываем значение удержания
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисленияРег.Начисление, 0)) КАК ОсновныеНачисления,
	|	ВКМ_ОсновныеНачисленияРег.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисленияРег КАК ВКМ_ОсновныеНачисленияРег
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияРег.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисленияРег.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_УдержанияРег.Сотрудник КАК Сотрудник,
	|	ВКМ_УдержанияРег.Показатель КАК РазмерНДФЛ,
	|	ВКМ_УдержанияРег.Регистратор КАК Регистратор,
	|	ЕСТЬNULL(ВТ_ОсновныеНачисления.ОсновныеНачисления, 0) КАК СуммаОсновныхНачислений
	|ИЗ
	|	РегистрРасчета.ВКМ_УдержанияРег КАК ВКМ_УдержанияРег
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	|		ПО ВКМ_УдержанияРег.Сотрудник = ВТ_ОсновныеНачисления.Сотрудник
	|ГДЕ
	|	ВКМ_УдержанияРег.Регистратор = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.УдержаниеНДФЛ);	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НаборЗаписей = РегистрыРасчета.ВКМ_УдержанияРег.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
		НаборЗаписей.Отбор.Сотрудник.Установить(ВыборкаДетальныеЗаписи.Сотрудник);
		НаборЗаписей.Прочитать();
		
		Для Каждого Запись из НаборЗаписей Цикл
			
			НачисленияОсновные = (ВыборкаДетальныеЗаписи.СуммаОсновныхНачислений * ВыборкаДетальныеЗаписи.РазмерНДФЛ) / 100;
			Запись.Начисление = Запись.Начисление + НачисленияОсновные;
			
		КонецЦикла;
		
		НаборЗаписей.Записать(,Истина , , );
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДвиженияВзаиморасчетыССотрудниками();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияРег.Сотрудник КАК Сотрудник,
	|	СУММА(ВКМ_ОсновныеНачисленияРег.Начисление) КАК ОсновныеНачисление,
	|	СУММА(ВКМ_УдержанияРег.Начисление) КАК Удержания,
	|	ВКМ_ОсновныеНачисленияРег.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисленияРег КАК ВКМ_ОсновныеНачисленияРег
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_УдержанияРег КАК ВКМ_УдержанияРег
	|		ПО ВКМ_ОсновныеНачисленияРег.Сотрудник = ВКМ_УдержанияРег.Сотрудник
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияРег.Регистратор = &Ссылка
	|	И ВКМ_УдержанияРег.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисленияРег.Сотрудник,
	|	ВКМ_ОсновныеНачисленияРег.Регистратор";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДвижениеВзаиморасчетыССотрудниками = Движения.ВКМ_ВзаиморасчетыССотрудникамиРег.Добавить();
		ДвижениеВзаиморасчетыССотрудниками.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижениеВзаиморасчетыССотрудниками.Период = НачалоМесяца(Дата);
		ДвижениеВзаиморасчетыССотрудниками.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		//СуммаКВыплате = ВыборкаДетальныеЗаписи.ОсновныеНачисление + ВыборкаДетальныеЗаписи.ДополнительныеНачисления - ВыборкаДетальныеЗаписи.Удержания;
		СуммаКВыплате = ВыборкаДетальныеЗаписи.ОсновныеНачисление - ВыборкаДетальныеЗаписи.Удержания;
		ДвижениеВзаиморасчетыССотрудниками.Сумма = СуммаКВыплате;
		
		Движения.ВКМ_ВзаиморасчетыССотрудникамиРег.Записать();
		
	КонецЦикла;
	
	
	// Находим, если есть, записи из регистра "ВКМ_ДополнительныеНачисленияРег"
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисленияРег.Сотрудник КАК Сотрудник,
	|	СУММА(ВКМ_ДополнительныеНачисленияРег.СуммаКОплате) КАК СуммаКОплате,
	|	ВКМ_ДополнительныеНачисленияРег.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисленияРег КАК ВКМ_ДополнительныеНачисленияРег
	|ГДЕ
	|	ВКМ_ДополнительныеНачисленияРег.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисленияРег.Сотрудник,
	|	ВКМ_ДополнительныеНачисленияРег.Регистратор";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ВКМ_ВзаиморасчетыССотрудникамиРег.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		//НаборЗаписей.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
		НаборЗаписей.Прочитать();
		
		Для Каждого Запись из НаборЗаписей Цикл
			
			Если Запись.Сотрудник = Выборка.Сотрудник Тогда
				
				Запись.Сумма = Запись.Сумма + Выборка.СуммаКОплате;
				
			Иначе 
				
				Продолжить;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НаборЗаписей.Записать(РежимЗамещения.Замещение);
		
	КонецЦикла;
	
	
КонецПроцедуры