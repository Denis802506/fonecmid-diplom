#Область ОписаниеПеременных

Перем Исполнитель;

Перем ДатаРабот;

Перем ВремяРабот;

Перем ТекстЗаписиДляОтправки;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	//СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	//СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	//СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	//СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) 
	
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.ВКМ_СтатусыЗаявокНаОбслуживание.ВнесеныКорректировки") Тогда

//		ТекстЗаписиДляОтправки = "";
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентов.Специалист КАК СпециалистНовый,
		|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот КАК ДатаПроведенияРаботНовая,
		|	ВКМ_ОбслуживаниеКлиентов.ВремяНачалаРабот КАК ВремяНачалаРаботНовое,
		|	ВКМ_ОбслуживаниеКлиентов.Номер КАК НомерДокумента
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если Исполнитель = ВыборкаДетальныеЗаписи.СпециалистНовый И ДатаРабот = ВыборкаДетальныеЗаписи.ДатаПроведенияРаботНовая 
				И ВремяРабот = ВыборкаДетальныеЗаписи.ВремяНачалаРаботНовое Тогда
				
				ТекстЗаписиДляОтправки = Неопределено;
				
			Иначе
				
				Если Исполнитель = Неопределено Тогда
					
					Исполнитель = ВыборкаДетальныеЗаписи.СпециалистНовый;
					СтрокаСообщенияИсполнитель = "Исполнитель: " + Исполнитель;
					
				ИначеЕсли Исполнитель <> ВыборкаДетальныеЗаписи.СпециалистНовый Тогда
					
					СтрокаСообщенияИсполнитель = "Предыдущий исполнитель: " + Исполнитель + Символы.ПС + "Новый исполнитель: " + ВыборкаДетальныеЗаписи.СпециалистНовый;
					
				ИначеЕсли Исполнитель = ВыборкаДетальныеЗаписи.СпециалистНовый Тогда
					
					СтрокаСообщенияИсполнитель = Неопределено;
					
				КонецЕсли;
				
				Если ДатаРабот = Неопределено Тогда
					
					ДатаРабот = ВыборкаДетальныеЗаписи.ДатаПроведенияРаботНовая;
					СтрокаСообщенияДатаРабот = "Дата проведения работ: " + ДатаРабот;
					
				ИначеЕсли ДатаРабот <> ВыборкаДетальныеЗаписи.ДатаПроведенияРаботНовая Тогда
					
					СтрокаСообщенияДатаРабот = "Старая дата проведения работ: " + ДатаРабот + Символы.ПС + "Новая дата проведения работ: " + ВыборкаДетальныеЗаписи.ДатаПроведенияРаботНовая;
					
				ИначеЕсли ДатаРабот = ВыборкаДетальныеЗаписи.ДатаПроведенияРаботНовая Тогда
					
					СтрокаСообщенияДатаРабот = Неопределено;
					
				КонецЕсли;
				
				Если ВремяРабот = Неопределено Тогда
					
					ВремяРабот = ВыборкаДетальныеЗаписи.ВремяНачалаРаботНовое;
					СтрокаСообщенияВремяРабот = "Время проведения работ: " + ВремяРабот;
					
				ИначеЕсли ВремяРабот <> ВыборкаДетальныеЗаписи.ВремяНачалаРаботНовое Тогда
					
					СтрокаСообщенияВремяРабот = "Старое время проведения работ: " + ВремяРабот + Символы.ПС + "Новое время проведения работ: " + ВыборкаДетальныеЗаписи.ВремяНачалаРаботНовое;
					
				ИначеЕсли ВремяРабот = ВыборкаДетальныеЗаписи.ВремяНачалаРаботНовое Тогда
					
					СтрокаСообщенияВремяРабот = Неопределено;
					
				КонецЕсли;
				
				ТекстЗаписиДляОтправки = "Для документа № " + ВыборкаДетальныеЗаписи.НомерДокумента + " произошли следующие изменения:" + Символы.ПС
				+ СтрокаСообщенияИсполнитель + Символы.ПС + СтрокаСообщенияДатаРабот + Символы.ПС + СтрокаСообщенияВремяРабот;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли Объект.Статус = ПредопределенноеЗначение("Перечисление.ВКМ_СтатусыЗаявокНаОбслуживание.НазначенОтветственному") Тогда 
		
		Исполнитель = ТекущийОбъект.Специалист;
		СтрокаСообщенияИсполнитель = "Исполнитель: " + Исполнитель;
		ДатаРабот = ТекущийОбъект.ДатаПроведенияРабот;
		СтрокаСообщенияДатаРабот = "Дата проведения работ: " + ДатаРабот;
		ВремяРабот = ТекущийОбъект.ВремяНачалаРабот;
		СтрокаСообщенияВремяРабот = "Время проведения работ: " + ВремяРабот;
		
		ТекстЗаписиДляОтправки = "Создан новый документ № " + ТекущийОбъект.Номер + Символы.ПС + 
		"Параметры:" + Символы.ПС + 
		СтрокаСообщенияИсполнитель + Символы.ПС 
		+ СтрокаСообщенияДатаРабот + Символы.ПС 
		+ СтрокаСообщенияВремяРабот;
		
	КонецЕсли;
	
//		Если Объект.Проведен И Объект.Статус = ПредопределенноеЗначение("Перечисление.ВКМ_СтатусыЗаявокНаОбслуживание.Открыт") Тогда
//			
//			Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
//			
//		КонецЕсли;
//	
	
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	

	Если Не Объект.Ссылка.Пустая() Тогда	
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВКМ_ОбслуживаниеКлиентов.Специалист КАК Специалист,
			|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
			|	ВКМ_ОбслуживаниеКлиентов.ВремяНачалаРабот КАК ВремяНачалаРабот
			|ИЗ
			|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
			|ГДЕ
			|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Исполнитель = ВыборкаДетальныеЗаписи.Специалист;
			ДатаРабот = ВыборкаДетальныеЗаписи.ДатаПроведенияРабот;
			ВремяРабот = ВыборкаДетальныеЗаписи.ВремяНачалаРабот;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТекущийОбъект.Статус = ПредопределенноеЗначение("Перечисление.ВКМ_СтатусыЗаявокНаОбслуживание.ПустаяСсылка") Тогда
	
	ТекущийОбъект.Статус = ПредопределенноеЗначение("Перечисление.ВКМ_СтатусыЗаявокНаОбслуживание.Открыт");
	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекстЗаписиДляОтправки <> Неопределено Тогда
				
		ЗаписьСправочника = Справочники.ВКМ_УведомлениеТелеграмБоту.СоздатьЭлемент();
		ЗаписьСправочника.ТекстСообщения = ТекстЗаписиДляОтправки;
		ЗаписьСправочника.Записать();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти



#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
